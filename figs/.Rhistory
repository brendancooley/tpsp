naColor <- "#D3D3D3"
rcvhm <- function(rcv, b) {
colnames(rcv) <- ccodes %>% pull(.)
rcv <- bind_cols(rcv, ccodes)
colnames(rcv)[colnames(rcv)=="X1"] <- "j_iso3"
rcvDF <- rcv %>% gather("i_iso3", "rcv_ji", -j_iso3)
rcvDF$rcv_ji <- ifelse(rcvDF$rcv_ji==0, NA, rcvDF$rcv_ji)
rcvDF$rcv_ji <- as.numeric(rcvDF$rcv_ji)
ggplot(rcvDF, aes(x=i_iso3, y=j_iso3, fill=rcv_ji)) +
geom_tile(colour="white", width=.9, height=.9) +
scale_fill_gradient(low=hmColors[1], high=hmColors[length(hmColors)],
breaks=c(min(rcvDF$rcv_ji, na.rm=TRUE), max(rcvDF$rcv_ji, na.rm=TRUE)), labels=c("Low", "High"),
guide="colorbar", na.value=naColor) +
labs(x='Defender', y='Attacker', title=paste0("Regime Change Values, ", Y, " (b=", as.character(b), ")")) +
labs(fill="Value") +
theme_classic() +
coord_fixed() +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.ticks.y=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y=element_blank(),
axis.line.x=element_blank(),
legend.position="none")
}
rcvhm(rcv0, 0) + rcvhm(rcv1, 1)
hmColors <- colorRampPalette(c("white", bcOrange))(20)
naColor <- "#D3D3D3"
rcvhm <- function(rcv, b) {
colnames(rcv) <- ccodes %>% pull(.)
rcv <- bind_cols(rcv, ccodes)
colnames(rcv)[colnames(rcv)=="X1"] <- "j_iso3"
rcvDF <- rcv %>% gather("i_iso3", "rcv_ji", -j_iso3)
rcvDF$rcv_ji <- ifelse(rcvDF$rcv_ji==0, NA, rcvDF$rcv_ji)
rcvDF$rcv_ji <- as.numeric(rcvDF$rcv_ji)
ggplot(rcvDF, aes(x=i_iso3, y=j_iso3, fill=rcv_ji)) +
geom_tile(colour="white", width=.9, height=.9) +
scale_fill_gradient(low=hmColors[1], high=hmColors[length(hmColors)],
breaks=c(min(rcvDF$rcv_ji, na.rm=TRUE), max(rcvDF$rcv_ji, na.rm=TRUE)), labels=c("Low", "High"),
guide="colorbar", na.value=naColor) +
labs(x='Defender', y='Attacker', title=paste0("Regime Change Values, ", Y, " (b=", as.character(b), ")")) +
labs(fill="Value") +
theme_classic() +
coord_fixed() +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.ticks.y=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y=element_blank(),
axis.line.x=element_blank(),
legend.position="none")
}
rcvhm(rcv0, 0) + rcvhm(rcv1, 1)
rcv0
mint <- max(rcv0)
mint
mint <- max(max(rcv0), max(rcv1))
mint
helperPath <- "~/Dropbox (Princeton)/14_Software/R/"
helperFiles <- list.files(helperPath)
for (i in helperFiles) {
source(paste0(helperPath, i))
}
libs <- c("tidyverse", "patchwork")
ipak(libs)
analysisPath <- "../working/analysis/"
dataPath <- paste0(analysisPath, "tpsp_data/")
resultsPath <- paste0(analysisPath, "results/")
ccodes <- read_csv(paste0(dataPath, "ccodes.csv"), col_names=FALSE)
Y <- read_csv(paste0(dataPath, "year.csv"), col_names=FALSE) %>% pull(.)
rcv0 <- read_csv(paste0(resultsPath, "rcv0.csv"), col_names=FALSE)
rcv1 <- read_csv(paste0(resultsPath, "rcv1.csv"), col_names=FALSE)
hmColors <- colorRampPalette(c("white", bcOrange))(20)
naColor <- "#D3D3D3"
mint <- 1
maxt <- max(max(rcv0), max(rcv1))
rcvhm <- function(rcv, b, minTau, maxTau) {
colnames(rcv) <- ccodes %>% pull(.)
rcv <- bind_cols(rcv, ccodes)
colnames(rcv)[colnames(rcv)=="X1"] <- "j_iso3"
rcvDF <- rcv %>% gather("i_iso3", "rcv_ji", -j_iso3)
rcvDF$rcv_ji <- ifelse(rcvDF$rcv_ji==0, NA, rcvDF$rcv_ji)
rcvDF$rcv_ji <- as.numeric(rcvDF$rcv_ji)
ggplot(rcvDF, aes(x=i_iso3, y=j_iso3, fill=rcv_ji)) +
geom_tile(colour="white", width=.9, height=.9) +
scale_fill_gradient(low=hmColors[1], high=hmColors[length(hmColors)],
breaks=c(minTau, maxTau), labels=c("Low", "High"),
guide="colorbar", na.value=naColor) +
labs(x='Defender', y='Attacker', title=paste0("Regime Change Values, ", Y, " (b=", as.character(b), ")")) +
labs(fill="Value") +
theme_classic() +
coord_fixed() +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.ticks.y=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y=element_blank(),
axis.line.x=element_blank(),
legend.position="none")
}
rcvhm(rcv0, 0, mint, maxt) + rcvhm(rcv1, 1, mint, maxt)
mint
maxt
maxt
maxTau
rcvhm <- function(rcv, b, minTau, maxTau) {
colnames(rcv) <- ccodes %>% pull(.)
rcv <- bind_cols(rcv, ccodes)
colnames(rcv)[colnames(rcv)=="X1"] <- "j_iso3"
rcvDF <- rcv %>% gather("i_iso3", "rcv_ji", -j_iso3)
rcvDF$rcv_ji <- ifelse(rcvDF$rcv_ji==0, NA, rcvDF$rcv_ji)
rcvDF$rcv_ji <- as.numeric(rcvDF$rcv_ji)
ggplot(rcvDF, aes(x=i_iso3, y=j_iso3, fill=rcv_ji)) +
geom_tile(colour="white", width=.9, height=.9) +
scale_fill_gradient(low=hmColors[1], high=hmColors[length(hmColors)],
breaks=c(minTau, maxTau), labels=c("Low", "High"),
guide="colorbar", na.value=naColor) +
labs(x='Defender', y='Attacker', title=paste0("Regime Change Values, ", Y, " (b=", as.character(b), ")")) +
labs(fill="Value") +
theme_classic() +
coord_fixed() +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.ticks.y=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y=element_blank(),
axis.line.x=element_blank(),
legend.position="none")
}
rcvhm(rcv0, 0, mint, maxt) + rcvhm(rcv1, 1, mint, maxt)
rcvhm <- function(rcv, b, minTau, maxTau) {
colnames(rcv) <- ccodes %>% pull(.)
rcv <- bind_cols(rcv, ccodes)
colnames(rcv)[colnames(rcv)=="X1"] <- "j_iso3"
rcvDF <- rcv %>% gather("i_iso3", "rcv_ji", -j_iso3)
rcvDF$rcv_ji <- ifelse(rcvDF$rcv_ji==0, NA, rcvDF$rcv_ji)
rcvDF$rcv_ji <- as.numeric(rcvDF$rcv_ji)
ggplot(rcvDF, aes(x=i_iso3, y=j_iso3, fill=rcv_ji)) +
geom_tile(colour="white", width=.9, height=.9) +
scale_fill_gradient(low=hmColors[1], high=hmColors[length(hmColors)],
breaks=c(minTau, maxTau), labels=c("Low", "High"),
guide="colorbar", na.value=naColor) +
labs(x='Defender', y='Attacker', title=paste0("Regime Change Values, ", Y, " (b=", as.character(b), ")")) +
labs(fill="Value") +
theme_classic() +
coord_fixed() +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.ticks.y=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y=element_blank(),
axis.line.x=element_blank(),
legend.position="none")
}
rcvhm(rcv0, 0, mint, maxt) + rcvhm(rcv1, 1, mint, maxt)
ggplot(rcvDF, aes(x=i_iso3, y=j_iso3, fill=rcv_ji)) +
geom_tile(colour="white", width=.9, height=.9) +
scale_fill_gradient(low=hmColors[1], high=hmColors[length(hmColors)],
breaks=c(minTau, maxTau), limits=c(minTau, maxTau), labels=c("Low", "High"),
guide="colorbar", na.value=naColor) +
labs(x='Defender', y='Attacker', title=paste0("Regime Change Values, ", Y, " (b=", as.character(b), ")")) +
labs(fill="Value") +
theme_classic() +
coord_fixed() +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.ticks.y=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y=element_blank(),
axis.line.x=element_blank(),
legend.position="none")
rcvhm <- function(rcv, b, minTau, maxTau) {
colnames(rcv) <- ccodes %>% pull(.)
rcv <- bind_cols(rcv, ccodes)
colnames(rcv)[colnames(rcv)=="X1"] <- "j_iso3"
rcvDF <- rcv %>% gather("i_iso3", "rcv_ji", -j_iso3)
rcvDF$rcv_ji <- ifelse(rcvDF$rcv_ji==0, NA, rcvDF$rcv_ji)
rcvDF$rcv_ji <- as.numeric(rcvDF$rcv_ji)
ggplot(rcvDF, aes(x=i_iso3, y=j_iso3, fill=rcv_ji)) +
geom_tile(colour="white", width=.9, height=.9) +
scale_fill_gradient(low=hmColors[1], high=hmColors[length(hmColors)],
breaks=c(minTau, maxTau), limits=c(minTau, maxTau), labels=c("Low", "High"),
guide="colorbar", na.value=naColor) +
labs(x='Defender', y='Attacker', title=paste0("Regime Change Values, ", Y, " (b=", as.character(b), ")")) +
labs(fill="Value") +
theme_classic() +
coord_fixed() +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.ticks.y=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y=element_blank(),
axis.line.x=element_blank(),
legend.position="none")
}
mint <- 1
maxt <- max(max(rcv0), max(rcv1))
rcvhm <- function(rcv, b, minTau, maxTau) {
colnames(rcv) <- ccodes %>% pull(.)
rcv <- bind_cols(rcv, ccodes)
colnames(rcv)[colnames(rcv)=="X1"] <- "j_iso3"
rcvDF <- rcv %>% gather("i_iso3", "rcv_ji", -j_iso3)
rcvDF$rcv_ji <- ifelse(rcvDF$rcv_ji==0, NA, rcvDF$rcv_ji)
rcvDF$rcv_ji <- as.numeric(rcvDF$rcv_ji)
ggplot(rcvDF, aes(x=i_iso3, y=j_iso3, fill=rcv_ji)) +
geom_tile(colour="white", width=.9, height=.9) +
scale_fill_gradient(low=hmColors[1], high=hmColors[length(hmColors)],
breaks=c(minTau, maxTau), limits=c(minTau, maxTau), labels=c("Low", "High"),
guide="colorbar", na.value=naColor) +
labs(x='Defender', y='Attacker', title=paste0("Regime Change Values, ", Y, " (b=", as.character(b), ")")) +
labs(fill="Value") +
theme_classic() +
coord_fixed() +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.ticks.y=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y=element_blank(),
axis.line.x=element_blank(),
legend.position="none")
}
rcvhm(rcv0, 0, mint, maxt) + rcvhm(rcv1, 1, mint, maxt)
hmColors <- colorRampPalette(c("white", bcOrange))(30)
naColor <- "#D3D3D3"
mint <- 1
maxt <- max(max(rcv0), max(rcv1))
rcvhm <- function(rcv, b, minTau, maxTau) {
colnames(rcv) <- ccodes %>% pull(.)
rcv <- bind_cols(rcv, ccodes)
colnames(rcv)[colnames(rcv)=="X1"] <- "j_iso3"
rcvDF <- rcv %>% gather("i_iso3", "rcv_ji", -j_iso3)
rcvDF$rcv_ji <- ifelse(rcvDF$rcv_ji==0, NA, rcvDF$rcv_ji)
rcvDF$rcv_ji <- as.numeric(rcvDF$rcv_ji)
ggplot(rcvDF, aes(x=i_iso3, y=j_iso3, fill=rcv_ji)) +
geom_tile(colour="white", width=.9, height=.9) +
scale_fill_gradient(low=hmColors[1], high=hmColors[length(hmColors)],
breaks=c(minTau, maxTau), limits=c(minTau, maxTau), labels=c("Low", "High"),
guide="colorbar", na.value=naColor) +
labs(x='Defender', y='Attacker', title=paste0("Regime Change Values, ", Y, " (b=", as.character(b), ")")) +
labs(fill="Value") +
theme_classic() +
coord_fixed() +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.ticks.y=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y=element_blank(),
axis.line.x=element_blank(),
legend.position="none")
}
rcvhm(rcv0, 0, mint, maxt) + rcvhm(rcv1, 1, mint, maxt)
rcv0
mint <- .99
maxt <- max(max(rcv0), max(rcv1))
rcvhm <- function(rcv, b, minTau, maxTau) {
colnames(rcv) <- ccodes %>% pull(.)
rcv <- bind_cols(rcv, ccodes)
colnames(rcv)[colnames(rcv)=="X1"] <- "j_iso3"
rcvDF <- rcv %>% gather("i_iso3", "rcv_ji", -j_iso3)
rcvDF$rcv_ji <- ifelse(rcvDF$rcv_ji==0, NA, rcvDF$rcv_ji)
rcvDF$rcv_ji <- as.numeric(rcvDF$rcv_ji)
ggplot(rcvDF, aes(x=i_iso3, y=j_iso3, fill=rcv_ji)) +
geom_tile(colour="white", width=.9, height=.9) +
scale_fill_gradient(low=hmColors[1], high=hmColors[length(hmColors)],
breaks=c(minTau, maxTau), limits=c(minTau, maxTau), labels=c("Low", "High"),
guide="colorbar", na.value=naColor) +
labs(x='Defender', y='Attacker', title=paste0("Regime Change Values, ", Y, " (b=", as.character(b), ")")) +
labs(fill="Value") +
theme_classic() +
coord_fixed() +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.ticks.y=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y=element_blank(),
axis.line.x=element_blank(),
legend.position="none")
}
rcvhm(rcv0, 0, mint, maxt) + rcvhm(rcv1, 1, mint, maxt)
# rcvhm(rcv0, 0, mint, maxt) + rcvhm(rcv1, 1, mint, maxt)
max(rcv0)
# rcvhm(rcv0, 0, mint, maxt) + rcvhm(rcv1, 1, mint, maxt)
which.max(rcv0)
# rcvhm(rcv0, 0, mint, maxt) + rcvhm(rcv1, 1, mint, maxt)
which(rcv0 == max(rcv0), arr.ind = TRUE)
# rcvhm(rcv0, 0, mint, maxt) + rcvhm(rcv1, 1, mint, maxt)
coords = which(rcv0 == max(rcv0), arr.ind = TRUE)
coords[0]
coords[1]
coords[2]
helperPath <- "~/Dropbox (Princeton)/14_Software/R/"
helperFiles <- list.files(helperPath)
for (i in helperFiles) {
source(paste0(helperPath, i))
}
libs <- c("tidyverse")
ipak(libs)
analysisPath <- "../working/analysis/"
dataPath <- paste0(analysisPath, "tpsp_data/")
resultsPath <- paste0(analysisPath, "results/")
ccodes <- read_csv(paste0(dataPath, "ccodes.csv"), col_names=FALSE)
Y <- read_csv(paste0(dataPath, "year.csv"), col_names=FALSE) %>% pull(.)
tau <- read_csv(paste0(dataPath, "tau.csv"), col_names=FALSE)
hmColors <- colorRampPalette(c("white", bcOrange))(20)
naColor <- "#D3D3D3"
tauhm <- function(tau) {
colnames(tau) <- ccodes %>% pull(.)
tau <- bind_cols(tau, ccodes)
colnames(tau)[colnames(tau)=="X1"] <- "j_iso3"
tauDF <- tau %>% gather("i_iso3", "tau_ji", -j_iso3)
tauDF$tau_ji <- ifelse(tauDF$tau_ji==0, NA, tauDF$tau_ji)
tauDF$tau_ji <- as.numeric(tauDF$tau_ji)
ggplot(tauDF, aes(x=i_iso3, y=j_iso3, fill=tau_ji)) +
geom_tile(colour="white", width=.9, height=.9) +
scale_fill_gradient(low=hmColors[1], high=hmColors[length(hmColors)],
breaks=c(min(tauDF$tau_ji, na.rm=TRUE), max(tauDF$tau_ji, na.rm=TRUE)), labels=c("Low", "High"),
guide="colorbar", na.value=naColor) +
labs(x='Exporter', y='Importer', title=paste0("Policy Barriers to Trade, ", Y)) +
labs(fill="Policy Barrier") +
theme_classic() +
coord_fixed() +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.ticks.y=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y=element_blank(),
axis.line.x=element_blank())
}
cc <- which(ccodes=="USA")
cc
tauhm <- function(tau, highlight=NULL) {
colnames(tau) <- ccodes %>% pull(.)
tau <- bind_cols(tau, ccodes)
colnames(tau)[colnames(tau)=="X1"] <- "j_iso3"
tauDF <- tau %>% gather("i_iso3", "tau_ji", -j_iso3)
tauDF$tau_ji <- ifelse(tauDF$tau_ji==0, NA, tauDF$tau_ji)
tauDF$tau_ji <- as.numeric(tauDF$tau_ji)
out <- ggplot(tauDF, aes(x=i_iso3, y=j_iso3, fill=tau_ji)) +
geom_tile(colour="white", width=.9, height=.9) +
scale_fill_gradient(low=hmColors[1], high=hmColors[length(hmColors)],
breaks=c(min(tauDF$tau_ji, na.rm=TRUE), max(tauDF$tau_ji, na.rm=TRUE)), labels=c("Low", "High"),
guide="colorbar", na.value=naColor) +
labs(x='Exporter', y='Importer', title=paste0("Policy Barriers to Trade, ", Y)) +
labs(fill="Policy Barrier") +
theme_classic() +
coord_fixed() +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.ticks.y=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y=element_blank(),
axis.line.x=element_blank())
if (!is.null(highlight)) {
cc <- which(ccodes=="USA")
out <- out + annotate("rect", ymin=cc-.1, ymax=cc+.1, xmin=0, xmax=length(ccodes), alpha=rectTrsp, color=rectColor, size=rectStroke)
}
return(out)
}
tauhm(tau)
tauhm <- function(tau, highlight=NULL) {
colnames(tau) <- ccodes %>% pull(.)
tau <- bind_cols(tau, ccodes)
colnames(tau)[colnames(tau)=="X1"] <- "j_iso3"
tauDF <- tau %>% gather("i_iso3", "tau_ji", -j_iso3)
tauDF$tau_ji <- ifelse(tauDF$tau_ji==0, NA, tauDF$tau_ji)
tauDF$tau_ji <- as.numeric(tauDF$tau_ji)
out <- ggplot(tauDF, aes(x=i_iso3, y=j_iso3, fill=tau_ji)) +
geom_tile(colour="white", width=.9, height=.9) +
scale_fill_gradient(low=hmColors[1], high=hmColors[length(hmColors)],
breaks=c(min(tauDF$tau_ji, na.rm=TRUE), max(tauDF$tau_ji, na.rm=TRUE)), labels=c("Low", "High"),
guide="colorbar", na.value=naColor) +
labs(x='Exporter', y='Importer', title=paste0("Policy Barriers to Trade, ", Y)) +
labs(fill="Policy Barrier") +
theme_classic() +
coord_fixed() +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.ticks.y=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y=element_blank(),
axis.line.x=element_blank())
if (!is.null(highlight)) {
cc <- which(ccodes==highlight)
out <- out + annotate("rect", ymin=cc-.1, ymax=cc+.1, xmin=0, xmax=length(ccodes), alpha=rectTrsp, color=rectColor, size=rectStroke)
}
return(out)
}
tauhm(tau, highlight=="USA")
tauhm(tau, highlight="USA")
helperPath <- "~/Dropbox (Princeton)/14_Software/R/"
helperFiles <- list.files(helperPath)
for (i in helperFiles) {
source(paste0(helperPath, i))
}
libs <- c("tidyverse")
ipak(libs)
analysisPath <- "../working/analysis/"
dataPath <- paste0(analysisPath, "tpsp_data/")
resultsPath <- paste0(analysisPath, "results/")
ccodes <- read_csv(paste0(dataPath, "ccodes.csv"), col_names=FALSE)
Y <- read_csv(paste0(dataPath, "year.csv"), col_names=FALSE) %>% pull(.)
tau <- read_csv(paste0(dataPath, "tau.csv"), col_names=FALSE)
hmColors <- colorRampPalette(c("white", bcOrange))(20)
naColor <- "#D3D3D3"
rectTrsp <- 0
rectColor <- "#000000CC"
rectStroke <- 1
tauhm <- function(tau, highlight=NULL) {
colnames(tau) <- ccodes %>% pull(.)
tau <- bind_cols(tau, ccodes)
colnames(tau)[colnames(tau)=="X1"] <- "j_iso3"
tauDF <- tau %>% gather("i_iso3", "tau_ji", -j_iso3)
tauDF$tau_ji <- ifelse(tauDF$tau_ji==0, NA, tauDF$tau_ji)
tauDF$tau_ji <- as.numeric(tauDF$tau_ji)
out <- ggplot(tauDF, aes(x=i_iso3, y=j_iso3, fill=tau_ji)) +
geom_tile(colour="white", width=.9, height=.9) +
scale_fill_gradient(low=hmColors[1], high=hmColors[length(hmColors)],
breaks=c(min(tauDF$tau_ji, na.rm=TRUE), max(tauDF$tau_ji, na.rm=TRUE)), labels=c("Low", "High"),
guide="colorbar", na.value=naColor) +
labs(x='Exporter', y='Importer', title=paste0("Policy Barriers to Trade, ", Y)) +
labs(fill="Policy Barrier") +
theme_classic() +
coord_fixed() +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.ticks.y=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y=element_blank(),
axis.line.x=element_blank())
if (!is.null(highlight)) {
cc <- which(ccodes==highlight)
out <- out + annotate("rect", ymin=cc-.1, ymax=cc+.1, xmin=0, xmax=length(ccodes), alpha=rectTrsp, color=rectColor, size=rectStroke)
}
return(out)
}
tauhm(tau, highlight="USA")
cc
tauhm <- function(tau, highlight=NULL) {
colnames(tau) <- ccodes %>% pull(.)
tau <- bind_cols(tau, ccodes)
colnames(tau)[colnames(tau)=="X1"] <- "j_iso3"
tauDF <- tau %>% gather("i_iso3", "tau_ji", -j_iso3)
tauDF$tau_ji <- ifelse(tauDF$tau_ji==0, NA, tauDF$tau_ji)
tauDF$tau_ji <- as.numeric(tauDF$tau_ji)
out <- ggplot(tauDF, aes(x=i_iso3, y=j_iso3, fill=tau_ji)) +
geom_tile(colour="white", width=.9, height=.9) +
scale_fill_gradient(low=hmColors[1], high=hmColors[length(hmColors)],
breaks=c(min(tauDF$tau_ji, na.rm=TRUE), max(tauDF$tau_ji, na.rm=TRUE)), labels=c("Low", "High"),
guide="colorbar", na.value=naColor) +
labs(x='Exporter', y='Importer', title=paste0("Policy Barriers to Trade, ", Y)) +
labs(fill="Policy Barrier") +
theme_classic() +
coord_fixed() +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.ticks.y=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y=element_blank(),
axis.line.x=element_blank())
if (!is.null(highlight)) {
cc <- which(ccodes==highlight)
print(cc)
out <- out + annotate("rect", ymin=cc-.1, ymax=cc+.1, xmin=0, xmax=length(ccodes), alpha=rectTrsp, color=rectColor, size=rectStroke)
}
return(out)
}
tauhm(tau, highlight="USA")
length(ccodes)
ccodes
tauhm <- function(tau, highlight=NULL) {
colnames(tau) <- ccodes %>% pull(.)
tau <- bind_cols(tau, ccodes)
colnames(tau)[colnames(tau)=="X1"] <- "j_iso3"
tauDF <- tau %>% gather("i_iso3", "tau_ji", -j_iso3)
tauDF$tau_ji <- ifelse(tauDF$tau_ji==0, NA, tauDF$tau_ji)
tauDF$tau_ji <- as.numeric(tauDF$tau_ji)
out <- ggplot(tauDF, aes(x=i_iso3, y=j_iso3, fill=tau_ji)) +
geom_tile(colour="white", width=.9, height=.9) +
scale_fill_gradient(low=hmColors[1], high=hmColors[length(hmColors)],
breaks=c(min(tauDF$tau_ji, na.rm=TRUE), max(tauDF$tau_ji, na.rm=TRUE)), labels=c("Low", "High"),
guide="colorbar", na.value=naColor) +
labs(x='Exporter', y='Importer', title=paste0("Policy Barriers to Trade, ", Y)) +
labs(fill="Policy Barrier") +
theme_classic() +
coord_fixed() +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.ticks.y=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y=element_blank(),
axis.line.x=element_blank())
if (!is.null(highlight)) {
cc <- which(ccodes==highlight)
print(cc)
out <- out + annotate("rect", ymin=cc-.5, ymax=cc+.5, xmin=0, xmax=nrow(ccodes), alpha=rectTrsp, color=rectColor, size=rectStroke)
}
return(out)
}
tauhm(tau, highlight="USA")
tauhm <- function(tau, highlight=NULL) {
colnames(tau) <- ccodes %>% pull(.)
tau <- bind_cols(tau, ccodes)
colnames(tau)[colnames(tau)=="X1"] <- "j_iso3"
tauDF <- tau %>% gather("i_iso3", "tau_ji", -j_iso3)
tauDF$tau_ji <- ifelse(tauDF$tau_ji==0, NA, tauDF$tau_ji)
tauDF$tau_ji <- as.numeric(tauDF$tau_ji)
out <- ggplot(tauDF, aes(x=i_iso3, y=j_iso3, fill=tau_ji)) +
geom_tile(colour="white", width=.9, height=.9) +
scale_fill_gradient(low=hmColors[1], high=hmColors[length(hmColors)],
breaks=c(min(tauDF$tau_ji, na.rm=TRUE), max(tauDF$tau_ji, na.rm=TRUE)), labels=c("Low", "High"),
guide="colorbar", na.value=naColor) +
labs(x='Exporter', y='Importer', title=paste0("Policy Barriers to Trade, ", Y)) +
labs(fill="Policy Barrier") +
theme_classic() +
coord_fixed() +
theme(axis.text.x=element_text(angle=60, hjust=1),
axis.ticks.y=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y=element_blank(),
axis.line.x=element_blank())
if (!is.null(highlight)) {
cc <- which(ccodes==highlight)
print(cc)
out <- out + annotate("rect", ymin=cc-.5, ymax=cc+.5, xmin=.5, xmax=nrow(ccodes)+.5, alpha=rectTrsp, color=rectColor, size=rectStroke)
}
return(out)
}
tauhm(tau, highlight="USA")
